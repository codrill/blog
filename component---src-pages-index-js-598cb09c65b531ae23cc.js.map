{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_1__","_components_header__WEBPACK_IMPORTED_MODULE_2__","_reach_router__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","edges","data","allMarkdownRemark","a","createElement","title","map","edge","frontmatter","node","key","path","to","style","marginBottom","excerpt","className","m","module","exports","require","default","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","TitleAndDescription","siteTitle","site","siteMetadata","siteDescritpion","description","react__WEBPACK_IMPORTED_MODULE_2___default","textAlign","gatsby__WEBPACK_IMPORTED_MODULE_1__","Header","_public_static_d_3501179355_json__WEBPACK_IMPORTED_MODULE_0__","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-598cb09c65b531ae23cc.js","sourcesContent":["import React from \"react\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\"\nimport { graphql } from \"gatsby\"\nimport { Link } from \"@reach/router\"\n\n// TODO: Implement properly Layout component\n// https://trello.com/c/ZN2twpaz\n\n// const IndexPage = () => (\n//   <Layout>\n//     <SEO title=\"Home\" />\n//     <h1>Cześć</h1>\n//     <p>Witamy na naszym nowym blogu</p>\n//     <p>Będziemy tutaj pisać o samych świetnych rzeczach</p>\n//     <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n//       <Image />\n//     </div>\n//     <Link to=\"/page-2/\">Go to page 2</Link>\n//   </Layout>\n// )\n\n\nconst IndexPage = ({ data }) => {\n  const { edges } = data.allMarkdownRemark\n  \n  return (\n    <div>\n      <SEO title=\"Home\"/>\n      <Header/>\n      \n      { edges.map(edge => {\n        const { frontmatter } = edge.node\n        return (\n          <div key={ frontmatter.path }>\n            <Link to={ frontmatter.path }>\n              <h4 style={ { marginBottom: \"0px\" } }>{ frontmatter.title }</h4>\n            </Link>\n            <p>{ frontmatter.excerpt }</p>\n          </div>\n        )\n      }) }\n      \n      <div className=\"categories-link\">\n        <Link to=\"categories\">Przeglądaj kategorie</Link>\n      </div>\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query HomepageQuery {\n    allMarkdownRemark(\n      sort: {order: DESC, fields: [frontmatter___date]}\n     ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            excerpt\n            date\n            path\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, Link, StaticQuery } from \"gatsby\"\nimport React from \"react\"\n\nconst TitleAndDescription = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const siteDescritpion = data.site.siteMetadata.description\n  \n  return (\n    <header style={ {\n      textAlign: \"center\",\n    } }>\n      <h2>\n        <Link to=\"/\">{ siteTitle }</Link>\n      </h2>\n      <p>{ siteDescritpion }</p>\n    </header>\n  )\n}\n\nconst Header = () => {\n  return (\n    <StaticQuery\n      query={ graphql`\n        query {\n          site {\n            siteMetadata {\n              title\n              description\n            }\n          }\n        }\n      ` }\n      render={ data => <TitleAndDescription data={ data }/> }\n    />\n  )\n}\n\nexport default Header\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}