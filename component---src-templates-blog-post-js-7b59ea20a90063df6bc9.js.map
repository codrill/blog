{"version":3,"sources":["webpack:///./src/templates/blogPost.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_header__WEBPACK_IMPORTED_MODULE_2__","Template","_ref","data","pageContext","next","prev","markdownRemark","postTitle","frontmatter","title","postHtml","html","a","createElement","className","dangerouslySetInnerHTML","__html","to","path","m","module","exports","require","default","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","TitleAndDescription","siteTitle","site","siteMetadata","siteDescritpion","description","react__WEBPACK_IMPORTED_MODULE_2___default","style","textAlign","Header","_public_static_d_3501179355_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-templates-blog-post-js-7b59ea20a90063df6bc9.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Header from \"../components/header\"\n\n\nconst Template = ({data, pageContext}) => {\n  const {next, prev} = pageContext\n  const {markdownRemark} = data\n  const postTitle = markdownRemark.frontmatter.title\n  const postHtml = markdownRemark.html\n  \n  return (\n    <div>\n      <Header/>\n      \n      <h1>{ postTitle }</h1>\n      <div className=\"blogPost\" dangerouslySetInnerHTML={{__html: postHtml}}>\n      </div>\n      \n      {prev &&\n        <Link to={prev.frontmatter.path}>\n          Poprzedni post\n        </Link>\n      }\n  \n      {next &&\n      <Link to={next.frontmatter.path}>\n        NastÄ™pny post\n      </Link>\n      }\n      \n    </div>\n  )\n}\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark( frontmatter: { path: {eq: $pathSlug} }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n\n\nexport default Template","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, Link, StaticQuery } from \"gatsby\"\nimport React from \"react\"\n\nconst TitleAndDescription = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const siteDescritpion = data.site.siteMetadata.description\n  \n  return (\n    <header style={ {\n      textAlign: \"center\",\n    } }>\n      <h2>\n        <Link to=\"/\">{ siteTitle }</Link>\n      </h2>\n      <p>{ siteDescritpion }</p>\n    </header>\n  )\n}\n\nconst Header = () => {\n  return (\n    <StaticQuery\n      query={ graphql`\n        query {\n          site {\n            siteMetadata {\n              title\n              description\n            }\n          }\n        }\n      ` }\n      render={ data => <TitleAndDescription data={ data }/> }\n    />\n  )\n}\n\nexport default Header\n"],"sourceRoot":""}